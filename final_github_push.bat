@echo off
echo ============================================
echo  MultiTeam Final GitHub Push V0.20
echo  Hanterar Git Merge och Push Automatiskt
echo ============================================

REM Set variables
set VERSION=0.20
set REPO_URL=https://github.com/Medzeta/Multi-Team-C
set BRANCH=main
set GIT_USER=Medzeta
set GIT_EMAIL=medzetadesign@gmail.com

echo.
echo [‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 10%% - Git Configuration
echo ============================================
echo  STEG 1/10: Git Setup
echo ============================================

REM Configure Git
echo üîß Konfigurerar Git...
git config --global user.name "%GIT_USER%"
git config --global user.email "%GIT_EMAIL%"
git config --global init.defaultBranch main
echo ‚úÖ Git konfigurerat: %GIT_USER% (%GIT_EMAIL%)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 20%% - Repository Status
echo ============================================
echo  STEG 2/10: Repository Check
echo ============================================
git status >nul 2>&1
if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è  Initialiserar Git repository...
    git init
    git remote add origin %REPO_URL% 2>nul
    echo ‚úÖ Repository initialiserat
) else (
    echo ‚úÖ Repository finns redan
)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë] 30%% - Remote Sync
echo ============================================
echo  STEG 3/10: Synka med Remote
echo ============================================
echo üîÑ H√§mtar remote changes...
git fetch origin main 2>nul
if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Remote data h√§mtad
) else (
    echo ‚ö†Ô∏è  Ingen remote data att h√§mta
)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë] 40%% - Adding Files
echo ============================================
echo  STEG 4/10: Git Add
echo ============================================
echo üìÅ L√§gger till alla filer...
git add .
echo ‚úÖ Filer tillagda

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 50%% - Creating Commit
echo ============================================
echo  STEG 5/10: Git Commit
echo ============================================
set commit_message=MultiTeam v%VERSION% - Complete PyQt6 application with working EXE and dashboard assets
echo üí¨ Commit: %commit_message%
git commit -m "%commit_message%" 2>nul
if %ERRORLEVEL% NEQ 0 (
    echo ‚ö†Ô∏è  Inga √§ndringar att committa
) else (
    echo ‚úÖ Commit skapat
)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 60%% - Branch Setup
echo ============================================
echo  STEG 6/10: Branch Configuration
echo ============================================
echo üåø S√§kerst√§ller main branch...
git branch -M main
git remote set-url origin %REPO_URL%
echo ‚úÖ Branch konfigurerad

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 70%% - Merge Remote Changes
echo ============================================
echo  STEG 7/10: Merge Remote
echo ============================================
echo üîÑ Mergar remote changes automatiskt...
git pull origin main --allow-unrelated-histories --no-edit --strategy=ours 2>nul
if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Remote changes mergade
) else (
    echo ‚ö†Ô∏è  Ingen merge beh√∂vdes
)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 80%% - Force Push
echo ============================================
echo  STEG 8/10: Push till GitHub
echo ============================================
echo üöÄ Pushar till GitHub med force...
git push -f origin main
if %ERRORLEVEL% EQU 0 (
    echo ‚úÖ Push lyckades!
) else (
    echo ‚ùå Push misslyckades
    echo üí° F√∂rs√∂ker alternativ push...
    git push --set-upstream origin main --force
    if %ERRORLEVEL% EQU 0 (
        echo ‚úÖ Alternativ push lyckades!
    ) else (
        echo ‚ùå Alla push-f√∂rs√∂k misslyckades
        echo üí° Kontrollera GitHub access token eller credentials
    )
)

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 90%% - Verification
echo ============================================
echo  STEG 9/10: Verifiering
echo ============================================
echo üîç Verifierar GitHub status...
git remote -v
git branch -a
git log --oneline -3

echo.
echo [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] 100%% - Complete
echo ============================================
echo  STEG 10/10: Summary
echo ============================================

REM Check if we have the release package
if exist "dist\MultiTeam_Complete_v0.20.zip" (
    echo ============================================
    echo  üéâ GITHUB PUSH KOMPLETT!
    echo ============================================
    echo ‚úÖ Git konfigurerat: %GIT_USER% (%GIT_EMAIL%)
    echo ‚úÖ Repository: %REPO_URL%
    echo ‚úÖ Branch: main
    echo ‚úÖ Code pushad till GitHub
    echo ‚úÖ Release package finns: dist\MultiTeam_Complete_v0.20.zip
    echo.
    echo üìä Package Info:
    for %%f in ("dist\MultiTeam_Complete_v0.20.zip") do echo   ZIP: %%~zf bytes (ca. %%~zf:~0,-6% MB^)
    echo.
    echo ============================================
    echo  üöÄ REDO F√ñR GITHUB RELEASE!
    echo ============================================
    echo üìã N√§sta steg:
    echo 1. G√• till: %REPO_URL%/releases
    echo 2. Klicka "Create a new release"
    echo 3. Tag: v%VERSION%
    echo 4. Title: "MultiTeam v%VERSION% - Complete PyQt6 Application"
    echo 5. Description: "Complete PyQt6 application with working EXE, dashboard assets, and all features"
    echo 6. Ladda upp: dist\MultiTeam_Complete_v0.20.zip
    echo 7. Publicera release!
    echo.
    echo üåê GitHub Repository: %REPO_URL%
    
) else (
    echo ‚ùå Release package saknas
    echo K√∂r build_complete_exe.bat f√∂rst
)

echo.
pause
