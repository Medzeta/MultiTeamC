"""
Installer Builder
Skapar en installation wizard för MultiTeam
"""

import os
import shutil
from pathlib import Path
from datetime import datetime


def create_installer_script():
    """Create NSIS installer script"""
    
    print("=" * 60)
    print("Creating Installer Script")
    print("=" * 60)
    
    # NSIS script content
    nsis_script = """
; MultiTeam P2P Communication Installer
; Generated by build_installer.py

!define APP_NAME "MultiTeam P2P Communication"
!define APP_VERSION "3.5"
!define APP_PUBLISHER "MultiTeam"
!define APP_EXE "MultiTeam.exe"
!define APP_ICON "assets\\icon.ico"

; Includes
!include "MUI2.nsh"
!include "FileFunc.nsh"

; General
Name "${APP_NAME}"
OutFile "MultiTeam_Setup_v${APP_VERSION}.exe"
InstallDir "$PROGRAMFILES64\\${APP_NAME}"
InstallDirRegKey HKLM "Software\\${APP_NAME}" "Install_Dir"
RequestExecutionLevel admin

; Interface Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${APP_ICON}"
!define MUI_UNICON "${APP_ICON}"
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_BITMAP "assets\\header.bmp"
!define MUI_WELCOMEFINISHPAGE_BITMAP "assets\\wizard.bmp"

; Pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "LICENSE.txt"
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

; Languages
!insertmacro MUI_LANGUAGE "English"

; Installer Sections
Section "MainSection" SEC01
    SetOutPath "$INSTDIR"
    
    ; Add files
    File "dist\\${APP_EXE}"
    File /r "data"
    File "README.md"
    File "LICENSE.txt"
    
    ; Create shortcuts
    CreateDirectory "$SMPROGRAMS\\${APP_NAME}"
    CreateShortcut "$SMPROGRAMS\\${APP_NAME}\\${APP_NAME}.lnk" "$INSTDIR\\${APP_EXE}"
    CreateShortcut "$DESKTOP\\${APP_NAME}.lnk" "$INSTDIR\\${APP_EXE}"
    
    ; Write registry keys
    WriteRegStr HKLM "Software\\${APP_NAME}" "Install_Dir" "$INSTDIR"
    WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "DisplayName" "${APP_NAME}"
    WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "UninstallString" '"$INSTDIR\\uninstall.exe"'
    WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "DisplayIcon" "$INSTDIR\\${APP_EXE}"
    WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "Publisher" "${APP_PUBLISHER}"
    WriteRegStr HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "DisplayVersion" "${APP_VERSION}"
    WriteRegDWORD HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "NoModify" 1
    WriteRegDWORD HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}" "NoRepair" 1
    
    ; Create uninstaller
    WriteUninstaller "$INSTDIR\\uninstall.exe"
SectionEnd

; Uninstaller Section
Section "Uninstall"
    ; Remove files
    Delete "$INSTDIR\\${APP_EXE}"
    Delete "$INSTDIR\\uninstall.exe"
    Delete "$INSTDIR\\README.md"
    Delete "$INSTDIR\\LICENSE.txt"
    RMDir /r "$INSTDIR\\data"
    
    ; Remove shortcuts
    Delete "$SMPROGRAMS\\${APP_NAME}\\${APP_NAME}.lnk"
    Delete "$DESKTOP\\${APP_NAME}.lnk"
    RMDir "$SMPROGRAMS\\${APP_NAME}"
    
    ; Remove registry keys
    DeleteRegKey HKLM "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\${APP_NAME}"
    DeleteRegKey HKLM "Software\\${APP_NAME}"
    
    ; Remove installation directory
    RMDir "$INSTDIR"
SectionEnd
"""
    
    # Write NSIS script
    script_path = Path("installer.nsi")
    with open(script_path, 'w') as f:
        f.write(nsis_script)
    
    print(f"✅ Installer script created: {script_path}")
    print("\nTo build installer:")
    print("1. Install NSIS: https://nsis.sourceforge.io/")
    print("2. Run: makensis installer.nsi")
    print("=" * 60)


def create_license():
    """Create LICENSE.txt file"""
    
    license_text = f"""MultiTeam P2P Communication
Copyright (c) {datetime.now().year} MultiTeam

MIT License

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""
    
    with open("LICENSE.txt", 'w') as f:
        f.write(license_text)
    
    print("✅ LICENSE.txt created")


def create_build_instructions():
    """Create build instructions"""
    
    instructions = """# Build Instructions

## Building Standalone EXE

### Prerequisites
1. Python 3.11+
2. All dependencies installed: `pip install -r requirements.txt`
3. PyInstaller: `pip install pyinstaller`

### Build Steps

1. **Build EXE:**
   ```bash
   python build_spec.py
   ```
   
   This will create `dist/MultiTeam.exe`

2. **Test EXE:**
   ```bash
   cd dist
   MultiTeam.exe
   ```

## Creating Installer

### Prerequisites
1. NSIS (Nullsoft Scriptable Install System)
   - Download: https://nsis.sourceforge.io/Download
   - Install to default location

2. Build EXE first (see above)

### Build Steps

1. **Generate installer script:**
   ```bash
   python build_installer.py
   ```

2. **Build installer:**
   ```bash
   makensis installer.nsi
   ```
   
   This will create `MultiTeam_Setup_v3.5.exe`

3. **Test installer:**
   - Run the setup EXE
   - Install to test location
   - Verify application works
   - Uninstall and verify cleanup

## Distribution

### Files to distribute:
- `MultiTeam_Setup_v3.5.exe` - Full installer
- OR `MultiTeam.exe` - Portable version

### Recommended:
Use the installer for better user experience:
- Creates Start Menu shortcuts
- Creates Desktop shortcut
- Proper uninstall support
- Registry integration

## Troubleshooting

### EXE doesn't start:
- Check antivirus (may flag as false positive)
- Run from command line to see errors
- Check Windows Event Viewer

### Missing dependencies:
- Rebuild with `--debug=all` flag
- Check PyInstaller warnings
- Add missing imports to build_spec.py

### Large file size:
- Normal for bundled Python apps (50-100 MB)
- Use UPX compression (optional)
- Exclude unnecessary modules

## Auto-Update (Future)

To implement auto-update:
1. Host latest version info on server
2. Check version on app start
3. Download and install updates
4. Restart application

See `core/auto_update.py` (to be implemented)
"""
    
    with open("BUILD_INSTRUCTIONS.md", 'w') as f:
        f.write(instructions)
    
    print("✅ BUILD_INSTRUCTIONS.md created")


if __name__ == "__main__":
    create_license()
    create_installer_script()
    create_build_instructions()
    
    print("\n" + "=" * 60)
    print("✅ All installer files created!")
    print("=" * 60)
